name: Build and Deploy

on:
  push:
    branches: [ main ]

env:
  REGISTRY: registry.digitalocean.com
  IMAGE_NAME: chat-service/chat-api

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # Build and Push Docker Image
      - name: Build container image
        run: |
          docker build \
            --build-arg DATABASE_URL="${{ secrets.DATABASE_URL }}" \
            --build-arg REDIS_URL="${{ secrets.REDIS_URL }}" \
            --build-arg JWT_SECRET="${{ secrets.JWT_SECRET }}" \
            --build-arg STRIPE_SECRET_KEY="${{ secrets.STRIPE_SECRET_KEY }}" \
            --build-arg STRIPE_SECRET_KEY="${{ secrets.STRIPE_PRICE_ID }}" \
            -t $REGISTRY/$IMAGE_NAME:${GITHUB_SHA::7} .

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Log in to DO Container Registry
        run: doctl registry login --expiry-seconds 600

      - name: Push image to DO Container Registry
        run: docker push $REGISTRY/$IMAGE_NAME:${GITHUB_SHA::7}

      # Deploy to Kubernetes
      - name: Save DigitalOcean kubeconfig
        run: doctl kubernetes cluster kubeconfig save chat-cluster

      - name: Deploy to DigitalOcean Kubernetes
        run: |
          set -x  # Enable verbose output
          helm upgrade --install chat-service ./helm/chat-service \
            --set image.tag=$(echo $GITHUB_SHA | head -c7) \
            --set "envVars.DATABASE_URL=${{ secrets.DATABASE_URL }}" \
            --set "envVars.REDIS_URL=${{ secrets.REDIS_URL }}" \
            --set "envVars.JWT_SECRET=${{ secrets.JWT_SECRET }}" \
            --set "envVars.STRIPE_SECRET_KEY=${{ secrets.STRIPE_SECRET_KEY }}" \
            --set "envVars.STRIPE_SECRET_KEY=${{ secrets.STRIPE_PRICE_ID }}" \
            --wait --timeout 10m \
            --debug
