name: Build and Deploy

on:
  push:
    branches: [ main ]

env:
  REGISTRY: registry.digitalocean.com
  IMAGE_NAME: chat-service/chat-api

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # Add Docker layer caching
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build container image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: false
          load: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max
          build-args: |
            DATABASE_URL=${{ secrets.DATABASE_URL }}
            REDIS_URL=${{ secrets.REDIS_URL }}
            JWT_SECRET=${{ secrets.JWT_SECRET }}
            STRIPE_SECRET_KEY=${{ secrets.STRIPE_SECRET_KEY }}
            STRIPE_PRICE_ID=${{ secrets.STRIPE_PRICE_ID }}

      # Move cache to prevent growth
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Log in to DO Container Registry
        run: doctl registry login --expiry-seconds 600

      - name: Push image to DO Container Registry
        run: |
          SHORT_SHA=$(echo $GITHUB_SHA | head -c7)
          docker tag $REGISTRY/$IMAGE_NAME:$GITHUB_SHA $REGISTRY/$IMAGE_NAME:$SHORT_SHA
          docker tag $REGISTRY/$IMAGE_NAME:$GITHUB_SHA $REGISTRY/$IMAGE_NAME:latest
          docker push $REGISTRY/$IMAGE_NAME:$SHORT_SHA
          docker push $REGISTRY/$IMAGE_NAME:latest

      # Deploy to Kubernetes
      - name: Save DigitalOcean kubeconfig
        run: doctl kubernetes cluster kubeconfig save chat-cluster

      - name: Deploy to DigitalOcean Kubernetes
        run: |
          set -x  # Enable verbose output
          helm upgrade --install chat-service ./helm/chat-service \
            --set image.tag=$(echo $GITHUB_SHA | head -c7) \
            --set "envVars.DATABASE_URL=${{ secrets.DATABASE_URL }}" \
            --set "envVars.REDIS_URL=${{ secrets.REDIS_URL }}" \
            --set "envVars.JWT_SECRET=${{ secrets.JWT_SECRET }}" \
            --set "envVars.STRIPE_SECRET_KEY=${{ secrets.STRIPE_SECRET_KEY }}" \
            --set "envVars.STRIPE_PRICE_ID=${{ secrets.STRIPE_PRICE_ID }}" \
            --set "imageCredentials.username=${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}" \
            --set "imageCredentials.password=${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}" \
            --wait --timeout 10m \
            --debug